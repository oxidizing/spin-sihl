name: CI
on: [push, pull_request]

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dev
        ports:
          - 5432:5432
      mariadb:
        image: mariadb:10.3
        env:
          MYSQL_USER: admin
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: dev
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
        ports:
          - 3306:3306
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-version:
          - 4.10.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Retrieve opam cache
        uses: actions/cache@v2
        if: runner.os != 'Windows'
        id: cache-opam
        with:
          path: template/dune-project
          key: v1-${{ runner.os }}-opam-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam.locked') }}
          restore-keys: |
            v2-${{ runner.os }}-opam-${{ matrix.ocaml-version }}-
      - name: Write spin config
        uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "default"
          FILE_DATA: "(username CI) (email ci@oxidizing) (github_username ci) (npm_username ci)"
      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}
      - name: Update opam repository
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: opam update
      - name: Generate project
        run: |
          opam install spin -y
          eval $(opam env)
          SPIN_CACHE_DIR=. SPIN_CONFIG_DIR=. spin new -d . test
      - name: Build project dependencies
        run: make deps
      - name: Build project
        run: make build
      - name: Test project
        run: make test

      # - name: Retrieve opam cache
      #   uses: actions/cache@v2
      #   if: runner.os != 'Windows'
      #   id: cache-opam
      #   with:
      #     path: ~/.opam
      #     key: v1-${{ runner.os }}-opam-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam.locked') }}
      #     restore-keys: |
      #       v2-${{ runner.os }}-opam-${{ matrix.ocaml-version }}-

      # - name: Use OCaml ${{ matrix.ocaml-version }}
      #   uses: avsm/setup-ocaml@v1
      #   with:
      #     ocaml-version: ${{ matrix.ocaml-version }}

      # - name: Update opam repository
      #   if: steps.cache-opam.outputs.cache-hit != 'true'
      #   run: opam update

      # - name: Pin package
      #   run: opam pin add . --yes --no-action

      # - name: Query and install external dependencies
      #   run: opam depext sihl sihl-user sihl-storage sihl-email sihl-queue sihl-cache sihl-token --yes --with-doc --with-test

      # - name: Install dependencies
      #   if: steps.cache-opam.outputs.cache-hit != 'true'
      #   run: |
      #     OPAMSOLVERTIMEOUT=300 opam install . --deps-only --with-doc --with-test --locked --unlock-base
      #     opam install ocamlformat --skip-updates

      # - name: Upgrade dependencies
      #   run: opam upgrade --fixup
      #   if: steps.cache-opam.outputs.cache-hit == 'true'

      # - name: Build
      #   run: make build

      # - name: Check formatting
      #   run: make format

      # - name: Build docs
      #   run: make doc

      # - name: Run tests
      #   run: make test-all
